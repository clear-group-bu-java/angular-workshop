{
  "openapi": "3.0.0",
  "info": {
    "title": "people",
    "version": "1.0",
    "contact": {
      "name": "Marc Remolt",
      "url": "https://www.alten-engineering.de/"
    },
    "license": {
      "name": "MIT"
    },
    "description": "Fake API for workshop"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/people": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "people"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "get-people",
        "description": "Get all people",
        "parameters": []
      },
      "post": {
        "summary": "",
        "operationId": "create-person",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Create a person",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      }
    },
    "/people/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "people"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "operationId": "get-people-id",
        "description": "Get one Person"
      },
      "put": {
        "summary": "",
        "operationId": "update-person",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "tags": [
          "people"
        ]
      },
      "delete": {
        "summary": "",
        "operationId": "delete-person",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "people"
        ]
      }
    },
    "/addresses": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "addresses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-addresses",
        "description": "Return list of addresses"
      },
      "post": {
        "summary": "",
        "operationId": "post-addresses",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "tags": [
          "addresses"
        ]
      }
    },
    "/addresses/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "operationId": "get-addresses-id",
        "description": "Return a single Address by ID",
        "tags": [
          "addresses"
        ]
      },
      "delete": {
        "summary": "",
        "operationId": "delete-addresses-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "addresses"
        ]
      },
      "put": {
        "summary": "",
        "operationId": "put-addresses-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "tags": [
          "addresses"
        ],
        "description": ""
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "title": "Person",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "firstName": "string",
            "lastName": "string",
            "email": "user@example.com",
            "birthDate": "2019-08-24",
            "": {
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
              "street": "string",
              "postcode": "string",
              "city": "string"
            }
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "minLength": 1,
            "x-faker": "name.firstName"
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "x-faker": "name.lastName"
          },
          "email": {
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "minLength": 5
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "cv": {
            "type": "string",
            "default": "",
            "x-faker": "lorem.paragraphs"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "cv"
        ]
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string",
            "x-faker": "address.streetName",
            "minLength": 1
          },
          "number": {
            "type": "string",
            "x-faker": "random.number"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          }
        },
        "required": [
          "street",
          "number",
          "city"
        ]
      },
      "City": {
        "title": "City",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-faker": "address.city"
          },
          "zipCode": {
            "type": "string",
            "x-faker": "address.zipCode"
          }
        },
        "required": [
          "name",
          "zipCode"
        ]
      }
    },
    "securitySchemes": {}
  },
  "tags": [
    {
      "name": "people"
    },
    {
      "name": "addresses"
    }
  ]
}